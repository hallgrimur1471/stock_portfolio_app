Roadmap:
[x] Setup express
[x] Setup Angular
[x] Setup express
[x] Implement back-end
[x] Setup Angular material
[] Implement search bar
    [] Add autocomplete
    [] Add HTTP calls on keypress which update the autocomplete list
    [] Add loading animation
[x] Setup Angular Routing
[x] Setup ng-bootstrap
    * https://www.c-sharpcorner.com/article/getting-started-with-ng-bootstrap-in-angular-5-app/
[x] Add ng-bootstrap Modal: https://ng-bootstrap.github.io/#/components/modal/examples
[x] Add ng-bootstrap Alert: https://ng-bootstrap.github.io/#/components/alert/examples
[] Try Bootstrap UI Components using the Bootstrap Grid System
[] Set up Boostrap Navbar for the page?
[] Implement Navbar
    * navbar documentation: https://getbootstrap.com/docs/4.0/components/navbar/
    * navbar tutorial, including in collapse: https://www.youtube.com/watch?v=akXfF066MY0
    * controlling navbar styles: https://stackoverflow.com/questions/41743102/changing-the-color-of-active-nav-item
    [] First draft with functionality
    [] Improved version with correct look
[] Implement persistent search component state: "Usage of router doesn't refresh the page but it would reinitialize the component as you mentioned if navigated back. There are different strategies to save the component state globally using a service, which is part of the research to implement this." @452
    * https://peterdaugaardrasmussen.com/2021/03/14/angular-how-to-keep-state-when-navigating-between-routes/
    * https://dev.to/avatsaev/simple-state-management-in-angular-with-only-services-and-rxjs-41p8
[] Make sure stock prices are calculated using LIFO?: @458
[] Use 60 seconds instead of 5 minutes to determine if market is open @466, we can use 5 min though @525
[] For current time in stock details: Use LA time
[] Make sure buy/sell logic has correct calculations https://piazza.com/class/kxindf11ki56s2?cid=597
[] Search state
    * behaviour subjects: https://piazza.com/class/kxindf11ki56s2?cid=597
    * routeReuseStrategy:
        * https://peterdaugaardrasmussen.com/2021/03/14/angular-how-to-keep-state-when-navigating-between-routes/
        * https://dev.to/avatsaev/simple-state-management-in-angular-with-only-services-and-rxjs-41p8

[x] watchlist & portfolio operations from search page
[x] watchlist & portfolio use local storage
[x] loading on search
[] fix routing logic & implement clickable watchlist & portfolio entries
[] add footer
[] auto update
[] show results even if all APIs don't respond
[] check how it looks in mobile
[] add logic about if market is open or not

Notes:
* Use Bootstrap 4+
* Use ng-bootstrap
* Use Angular 7+ (Angular 10 recommended) (can use later version as well)
* Use Node.js + Express.js

* Implement autocomplete using Angular Material
* Make API calls to Finhub in Node.js by using Express HTTP (recommended)
* Behaviour of footer: https://piazza.com/class/kxindf11ki56s2?cid=431
* from & to parameters on charts API: https://piazza.com/class/kxindf11ki56s2?cid=434
* from & to parameters for news tab: https://piazza.com/class/kxindf11ki56s2?cid=435
* fix angular cache issue: https://elelad.medium.com/avoid-cache-trap-when-serving-angular-app-c5981653d156
* Angular video tutorial: https://www.youtube.com/playlist?list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ
* Updating child components, check out two-way-binding: https://angular.io/guide/two-way-binding
* Angular & NodeJS together:
    * https://medium.com/bb-tutorials-and-thoughts/how-to-develop-and-build-angular-app-with-nodejs-e24c40444421
    * https://dev.to/rajesh04159786/connecting-angular-application-with-nodejs-backend-1l81

Angular notes:
* Pipes: https://angular.io/guide/pipes
* FormsModule (ngModel): https://angular.io/api/forms/FormsModule
* ngFor directive: https://angular.io/guide/built-in-directives#ngFor
    * structural directives? https://angular.io/guide/structural-directives
* Event binding: https://angular.io/guide/event-binding
* Property binding (<app-hero-detail [hero]="selectedHero"></app-hero-detail>): https://angular.io/guide/property-binding
* Sharing data between child and parent directives and components: https://angular.io/guide/inputs-outputs
* Directives.. RouterLink is an example: https://angular.io/api/router/RouterModule
* AsyncPipe: https://angular.io/api/common/AsyncPipe

Angular Material:
* ngg add '@angular/material'
    * Added indogo & pink theme
    * Added typography
    * Added BrowserAnimationsModule

provider: something that can create or deliver a service.
service: 
component: 